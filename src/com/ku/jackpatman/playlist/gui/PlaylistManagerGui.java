/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ku.jackpatman.playlist.gui;

import com.ku.jackpatman.playlist.Playlist;
import com.ku.jackpatman.playlist.Track;
import com.ku.jackpatman.playlist.reader.PlaylistReader;
import com.mpatric.mp3agic.ID3v1;
import com.mpatric.mp3agic.ID3v2;
import java.io.File;
import java.text.DecimalFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jack
 */
public class PlaylistManagerGui extends javax.swing.JFrame
{

    static PlaylistReader reader;

    /**
     * Creates new form PlaylistManagerGui
     */
    public PlaylistManagerGui()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListPlaylists = new javax.swing.JList();
        btnAddPlaylist = new javax.swing.JButton();
        btnRemovePlaylist = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableTracks = new javax.swing.JTable();
        jMenuToolbar = new javax.swing.JMenuBar();
        jBtnFile = new javax.swing.JMenu();
        BtnLoadPlaylist = new javax.swing.JMenuItem();
        BtnMenuRemovePlaylist = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Playlist Manager");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("MainFrame"); // NOI18N

        jScrollPane1.setName("jListPlaylists"); // NOI18N

        jListPlaylists.setName("jListPlaylists"); // NOI18N
        jScrollPane1.setViewportView(jListPlaylists);

        btnAddPlaylist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/music43.png"))); // NOI18N
        btnAddPlaylist.setToolTipText("Add Playlist/Folder");
        btnAddPlaylist.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAddPlaylistActionPerformed(evt);
            }
        });

        btnRemovePlaylist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/music28.png"))); // NOI18N
        btnRemovePlaylist.setToolTipText("Remove Playlist/Folder");
        btnRemovePlaylist.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnRemovePlaylistActionPerformed(evt);
            }
        });

        jTableTracks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Album", "Title", "Artist", "Genre", "Length", "Year"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableTracks);

        jMenuToolbar.setName("TlbrMainMenu"); // NOI18N

        jBtnFile.setText("File");
        jBtnFile.setName("BtnFile"); // NOI18N

        BtnLoadPlaylist.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        BtnLoadPlaylist.setBackground(new java.awt.Color(249, 240, 240));
        BtnLoadPlaylist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/music200.png"))); // NOI18N
        BtnLoadPlaylist.setText("Load Playlist");
        BtnLoadPlaylist.setToolTipText("");
        BtnLoadPlaylist.setName("BtnLoad"); // NOI18N
        BtnLoadPlaylist.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BtnLoadPlaylistActionPerformed(evt);
            }
        });
        jBtnFile.add(BtnLoadPlaylist);
        BtnLoadPlaylist.getAccessibleContext().setAccessibleName("loadPlaylistBtn");

        BtnMenuRemovePlaylist.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        BtnMenuRemovePlaylist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/music250.png"))); // NOI18N
        BtnMenuRemovePlaylist.setText("Remove Playlist");
        BtnMenuRemovePlaylist.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BtnMenuRemovePlaylistActionPerformed(evt);
            }
        });
        jBtnFile.add(BtnMenuRemovePlaylist);

        jMenuToolbar.add(jBtnFile);

        jMenu2.setText("Edit");
        jMenuToolbar.add(jMenu2);

        setJMenuBar(jMenuToolbar);
        jMenuToolbar.getAccessibleContext().setAccessibleName("MenuToolbar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemovePlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAddPlaylist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemovePlaylist, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("MainMenu");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnLoadPlaylistActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BtnLoadPlaylistActionPerformed
    {//GEN-HEADEREND:event_BtnLoadPlaylistActionPerformed
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        fc.showOpenDialog(this);

        File file = fc.getSelectedFile();

        reader.LoadPlaylist(file.getPath());

        jListPlaylists.setModel(new DefaultListModel()
        {
            Object[] playlist = reader.getPlaylists().toArray();

            public int getSize()
            {
                return playlist.length;
            }

            public Object getElementAt(int i)
            {
                return playlist[i];
            }
        });

        jListPlaylists.addListSelectionListener(new ListSelectionListener()
        {
            public void valueChanged(ListSelectionEvent event)
            {
                if (!event.getValueIsAdjusting())
                {
                    JList source = (JList) event.getSource();
                    UpdateTable(source.getSelectedIndex());
                }
            }
        });
        jListPlaylists.setSelectedIndex(0);
        jScrollPane1.setViewportView(jListPlaylists);
    }//GEN-LAST:event_BtnLoadPlaylistActionPerformed

    private void btnAddPlaylistActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAddPlaylistActionPerformed
    {//GEN-HEADEREND:event_btnAddPlaylistActionPerformed
        BtnLoadPlaylistActionPerformed(evt);
    }//GEN-LAST:event_btnAddPlaylistActionPerformed

    private void btnRemovePlaylistActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnRemovePlaylistActionPerformed
    {//GEN-HEADEREND:event_btnRemovePlaylistActionPerformed
        BtnMenuRemovePlaylistActionPerformed(evt);
    }//GEN-LAST:event_btnRemovePlaylistActionPerformed

    private void BtnMenuRemovePlaylistActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BtnMenuRemovePlaylistActionPerformed
    {//GEN-HEADEREND:event_BtnMenuRemovePlaylistActionPerformed
        DefaultListModel model = (DefaultListModel) jListPlaylists.getModel();
        int selectedIndex = jListPlaylists.getSelectedIndex();
        reader.getPlaylists().remove(selectedIndex);

        jListPlaylists.setModel(new DefaultListModel()
        {
            Object[] playlist = reader.getPlaylists().toArray();

            public int getSize()
            {
                return playlist.length;
            }

            public Object getElementAt(int i)
            {
                return playlist[i];
            }
        });
            jScrollPane1.setViewportView(jListPlaylists);    }//GEN-LAST:event_BtnMenuRemovePlaylistActionPerformed

    private void UpdateTable(int playlistIndex)
    {
        Playlist playlist = reader.getPlaylists().get(playlistIndex);
        DefaultTableModel model = (DefaultTableModel) jTableTracks.getModel();
        model.setRowCount(0);
        
        for (Track track: playlist.getTracks())
        {
            String album = null;
            String name = null;
            String artist = null;
            String year = null;
            String genre = null;
            String length = null;

            if (track.getTrackFile().hasId3v1Tag())
            {
                ID3v1 tag = track.getTrackFile().getId3v1Tag();
                album = tag.getAlbum();
                name = tag.getTitle();
                artist = tag.getArtist();
                year = tag.getYear();
                genre = tag.getGenreDescription();
                // Length cannot be retrieved from ID3V1 tag
            }
            else
            {
                ID3v2 tag = track.getTrackFile().getId3v2Tag();
                album = tag.getAlbum();
                name = tag.getTitle();
                artist = tag.getArtist();
                year = tag.getYear();
                genre = tag.getGenreDescription();
                double actualLength = track.getTrackFile().getLengthInSeconds()/60.0;
                DecimalFormat df = new DecimalFormat("#.00");
                length = df.format(actualLength);             
            }
            
            Object[] row = { album, name, artist, genre, length, year};
            model.addRow(row);            
            model.fireTableDataChanged();;
            jTableTracks.setModel(model);
        }
        
    }
    public static void main(String args[])
    {
        try
        {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex)
        {
            Logger.getLogger(PlaylistManagerGui.class.getName()).log(Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                reader = new PlaylistReader();
                JFrame window = new PlaylistManagerGui();
                window.setLocationRelativeTo(null); // Center window
                window.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem BtnLoadPlaylist;
    private javax.swing.JMenuItem BtnMenuRemovePlaylist;
    private javax.swing.JButton btnAddPlaylist;
    private javax.swing.JButton btnRemovePlaylist;
    private javax.swing.JMenu jBtnFile;
    private javax.swing.JList jListPlaylists;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuToolbar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableTracks;
    // End of variables declaration//GEN-END:variables
}
